pipeline {
    agent {
       node {
    		label 'aws-vm'
    		}
    }

     options    {
                timestamps()
                buildDiscarder(logRotator(numToKeepStr: '2', artifactNumToKeepStr: '2'))
                timeout(time: 120, unit: 'MINUTES')
                disableConcurrentBuilds()
                }

    parameters {
            string(name: 'appBranch', defaultValue: 'main', description: "Application Branch name of the Repo")
            string(name: 'gitURL', defaultValue: 'https://github.com/ManiTeki/aws-aug1-mavenapp.git', description: "Pass the Maven Repo Source Code GIT URL")
                }            


    stages {
        stage('checkout') {
            steps {
                git branch: appBranch, url: gitURL
            }
        }
        stage('Maven Build') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('Docker Build') {
            steps {

                sh 'docker build . -f dockerfile_testapp -t maniteki/mavendemo:latest'

            }
        }  

        stage('Docker Login') {
            steps {

            withCredentials([usernamePassword(credentialsId: 'dockerlogin', passwordVariable: 'dockerpwd', usernameVariable: 'dockeruser')]) {
    
 				   sh 'docker login -u ${dockeruser} -p ${dockerpwd}'
				}

            }
        }              

        stage('Docker Push') {
            steps {
                sh 'docker push maniteki/mavendemo:latest'

            }
        } 
    }
}